"use strict";(self.webpackChunkweb_development=self.webpackChunkweb_development||[]).push([[792],{944:(t,e,n)=>{n.d(e,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o)()(a());i.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&family=Roboto+Slab:wght@100..900&display=swap);"]),i.push([t.id,":root {\n  --ff-1: 'Josefin Sans', Arial, sans-serif;\n  --ff-2: 'Roboto Slab', Arial, sans-serif;\n\n  --fs-header: 1.4rem;\n  --fs-normal: 1rem;\n  --fs-small: 0.9rem;\n\n  --border: 1px solid rgb(255, 255, 255);\n  --border-board: 2px solid black;\n  --border-cell: 1px solid rgb(255, 255, 255);\n\n  --clr-bg: rgb(0, 0, 0);\n  --clr-text: rgb(254, 249, 249);\n\n  --clr-game-bg: rgb(0, 0, 0);\n  --clr-board: rgb(255, 255, 255);\n  --clr-ship: rgb(198, 238, 249);\n  --clr-cell: grey;\n  --clr-hit: red;\n  --clr-miss: black;\n\n  --width-board: 400px;\n  --height-board: 400px;\n  --width-cell: 40px;\n  --height-cell: 40px;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbutton {\n  height: 3rem;\n  width: 8rem;\n\n  font-family: var(--ff-2);\n  font-size: 1.2rem;\n  font-weight: 600;\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  row-gap: 2rem;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--clr-bg);\n  color: var(--clr-text);\n  font-size: var(--fs-normal);\n  font-family: var(--ff-1);\n}\n\nmain {\n  display: grid;\n  grid-template: 1fr 15rem / 1fr 1fr;\n  gap: 1rem 5rem;\n  padding: 2rem;\n\n  background-color: var(--clr-game-bg);\n  text-align: center;\n}\n\n.computer {\n  position: relative;\n}\n\n.board {\n  width: var(--width-board);\n  height: var(--height-board);\n\n  display: grid;\n  grid-template: repeat(10, 40px) / repeat(10, 40px);\n  place-content: center;\n\n  border: var(--border-board);\n\n  transition: opacity 0.5s;\n\n  .cell {\n    border: var(--border-cell);\n    width: var(--width-cell);\n    height: var(--height-cell);\n    transition: background 0.25s;\n  }\n}\n\n.board.inactive {\n  opacity: 0.2;\n}\n\n.control {\n  grid-row: 2/3;\n  grid-column: 1/3;\n\n  .staging-buttons {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    gap: 5rem;\n  }\n}\n\n.start-btn {\n  position: absolute;\n  top: 44%;\n  left: 34%;\n  z-index: 1;\n}\n\n.reset-btn {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAEA;EACE,yCAAyC;EACzC,wCAAwC;;EAExC,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;;EAElB,sCAAsC;EACtC,+BAA+B;EAC/B,2CAA2C;;EAE3C,sBAAsB;EACtB,8BAA8B;;EAE9B,2BAA2B;EAC3B,+BAA+B;EAC/B,8BAA8B;EAC9B,gBAAgB;EAChB,cAAc;EACd,iBAAiB;;EAEjB,oBAAoB;EACpB,qBAAqB;EACrB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,WAAW;;EAEX,wBAAwB;EACxB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,aAAa;EACb,wBAAwB;EACxB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,+BAA+B;EAC/B,sBAAsB;EACtB,2BAA2B;EAC3B,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,cAAc;EACd,aAAa;;EAEb,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,2BAA2B;;EAE3B,aAAa;EACb,kDAAkD;EAClD,qBAAqB;;EAErB,2BAA2B;;EAE3B,wBAAwB;;EAExB;IACE,0BAA0B;IAC1B,wBAAwB;IACxB,0BAA0B;IAC1B,4BAA4B;EAC9B;AACF;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,gBAAgB;;EAEhB;IACE,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,SAAS;EACX;AACF;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;AACf",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&family=Roboto+Slab:wght@100..900&display=swap');\n\n:root {\n  --ff-1: 'Josefin Sans', Arial, sans-serif;\n  --ff-2: 'Roboto Slab', Arial, sans-serif;\n\n  --fs-header: 1.4rem;\n  --fs-normal: 1rem;\n  --fs-small: 0.9rem;\n\n  --border: 1px solid rgb(255, 255, 255);\n  --border-board: 2px solid black;\n  --border-cell: 1px solid rgb(255, 255, 255);\n\n  --clr-bg: rgb(0, 0, 0);\n  --clr-text: rgb(254, 249, 249);\n\n  --clr-game-bg: rgb(0, 0, 0);\n  --clr-board: rgb(255, 255, 255);\n  --clr-ship: rgb(198, 238, 249);\n  --clr-cell: grey;\n  --clr-hit: red;\n  --clr-miss: black;\n\n  --width-board: 400px;\n  --height-board: 400px;\n  --width-cell: 40px;\n  --height-cell: 40px;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbutton {\n  height: 3rem;\n  width: 8rem;\n\n  font-family: var(--ff-2);\n  font-size: 1.2rem;\n  font-weight: 600;\n}\n\nbody {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  row-gap: 2rem;\n  justify-content: center;\n  align-items: center;\n\n  background-color: var(--clr-bg);\n  color: var(--clr-text);\n  font-size: var(--fs-normal);\n  font-family: var(--ff-1);\n}\n\nmain {\n  display: grid;\n  grid-template: 1fr 15rem / 1fr 1fr;\n  gap: 1rem 5rem;\n  padding: 2rem;\n\n  background-color: var(--clr-game-bg);\n  text-align: center;\n}\n\n.computer {\n  position: relative;\n}\n\n.board {\n  width: var(--width-board);\n  height: var(--height-board);\n\n  display: grid;\n  grid-template: repeat(10, 40px) / repeat(10, 40px);\n  place-content: center;\n\n  border: var(--border-board);\n\n  transition: opacity 0.5s;\n\n  .cell {\n    border: var(--border-cell);\n    width: var(--width-cell);\n    height: var(--height-cell);\n    transition: background 0.25s;\n  }\n}\n\n.board.inactive {\n  opacity: 0.2;\n}\n\n.control {\n  grid-row: 2/3;\n  grid-column: 1/3;\n\n  .staging-buttons {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    gap: 5rem;\n  }\n}\n\n.start-btn {\n  position: absolute;\n  top: 44%;\n  left: 34%;\n  z-index: 1;\n}\n\n.reset-btn {\n  display: none;\n}\n"],sourceRoot:""}]);const s=i},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,a,o){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var d=0;d<t.length;d++){var c=[].concat(t[d]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var o={},i=[],s=0;s<t.length;s++){var l=t[s],d=r.base?l[0]+r.base:l[0],c=o[d]||0,A="".concat(d," ").concat(c);o[d]=c+1;var h=n(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)e[h].references++,e[h].updater(p);else{var m=a(p,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var o=r(t=t||[],a=a||{});return function(t){t=t||[];for(var i=0;i<o.length;i++){var s=n(o[i]);e[s].references--}for(var l=r(t,a),d=0;d<o.length;d++){var c=n(o[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},659:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},408:(t,e,n)=>{var r=n(72),a=n.n(r),o=n(825),i=n.n(o),s=n(659),l=n.n(s),d=n(56),c=n.n(d),A=n(540),h=n.n(A),p=n(113),m=n.n(p),u=n(944),b={};b.styleTagTransform=m(),b.setAttributes=c(),b.insert=l().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=h(),a()(u.A,b),u.A&&u.A.locals&&u.A.locals;class f{constructor(t){this.length=t,this.hitCount=0}hit(){return this.hitCount+=1,!0}isSunk(){return this.hitCount>=this.length}}class B{static size=10;allShip=[];shipCoordinates=[];missedAttacks=[];hitAttacks=[];DEFAULT_SHIPS_LENGTH=[5,4,4,3,3,3,2,2,2];ADJACENT_EDGES=[[0,1],[0,-1],[1,0],[1,1],[1,-1],[-1,1],[-1,0],[-1,-1]];constructor(){this.create2DArray(B.size)}create2DArray(){this.board=Array.from({length:B.size},(()=>Array.from({length:B.size},(()=>null))))}resetBoard(){this.allShip=[],this.shipCoordinates=[],this.create2DArray(B.size)}#t(t,e){const n=(t,e)=>t<B.size&&t>=0&&e<B.size&&e>=0;return((t,e)=>{for(let[r,a]of this.ADJACENT_EDGES)if(r+=t,a+=e,n(r,a)&&null!==this.board[r][a])return!1;return!0})(t,e)&&n(t,e)&&((t,e)=>null===this.board[t][e])(t,e)}placeShip([t,e],n,r){const a=new f(n);for(let a=0;a<n;a+=1){const n="hor"===r?e+a:e,o="ver"===r?t+a:t;if(!this.#t(o,n))return!1}for(let o=0;o<n;o+=1){const n="hor"===r?e+o:e,i="ver"===r?t+o:t;this.board[i][n]=a,this.shipCoordinates.push([i,n])}return this.allShip.push(a),!0}receiveAttack([t,e]){return null===this.board[t][e]?(this.missedAttacks.push([t,e]),!1):(this.board[t][e].hit(),this.hitAttacks.push([t,e]),!0)}isAllSunk(){return this.allShip.every((t=>t.isSunk()))}placeRandomShip(){for(const t of this.DEFAULT_SHIPS_LENGTH){let e=Math.floor(2*Math.random())>0?"hor":"ver",n=[Math.floor(Math.random()*B.size),Math.floor(Math.random()*B.size)];for(;!this.placeShip(n,t,e);)n=[Math.floor(Math.random()*B.size),Math.floor(Math.random()*B.size)],e=Math.floor(2*Math.random())>0?"hor":"ver"}return!0}}class g{boardSize=B.size;oldPlayerShipCoordinate=[];oldComputerShipCoordinate=[];constructor({startBtnCb:t,randomizeBtnCb:e,resetBtnCb:n}){this.playerElement=document.querySelector(".player"),this.computerElement=document.querySelector(".computer"),this.startBtn=document.querySelector(".start-btn"),this.randomizeBtn=document.querySelector(".randomize-btn"),this.resetBtn=document.querySelector(".reset-btn"),this.startBtn.addEventListener("click",(()=>{t()})),this.randomizeBtn.addEventListener("click",(()=>{e()})),this.resetBtn.addEventListener("click",(()=>{n()}))}createBoard(t){const e=document.createElement("div");t?e.classList.add("board","inactive"):e.classList.add("board");for(let n=0;n<this.boardSize;n+=1)for(let r=0;r<this.boardSize;r+=1){const a=document.createElement("div");this.addCellAttributes(a,[n,r],t),e.appendChild(a)}return e}renderBoard(t,e){this.clearBoardElement(e);for(const[n,r]of t)g.getCellElement([n,r],e).style.backgroundColor="blue"}clearBoardElement(t){const e=document.querySelectorAll(`.cell[data-player="${t}"]`);for(const t of e)t.style.backgroundColor="black",t.dataset.status="null"}addCellAttributes(t,[e,n],r){t.classList.add("cell"),t.dataset.row=e,t.dataset.col=n,t.dataset.status="null",r?(t.addEventListener("click",(()=>{r(t)})),t.dataset.player="false"):t.dataset.player="true"}disableBtn(t){const e=document.querySelector(`.${t}`);e.setAttribute("disabled",!0),e.style.display="none"}enableBtn(t){const e=document.querySelector(`.${t}`);e.removeAttribute("disabled"),e.style.display="block"}static getCellElement=([t,e],n)=>document.querySelector(`.cell[data-row="${t}"][data-col="${e}"][data-player="${n}"]`)}class C{constructor(t){this.isHuman="human"===t,this.gameboard=new B}}new class{constructor(){this.player=new C,this.computer=new C("computer"),this.turn="over",this.dom=new g({randomizeBtnCb:this.#e.bind(this),resetBtnCb:this.#n.bind(this),startBtnCb:this.#r.bind(this)}),this.#a()}#a(){this.dom.playerElement.appendChild(this.dom.createBoard()),this.dom.computerElement.appendChild(this.dom.createBoard(this.playerAttack.bind(this))),this.player.gameboard.placeRandomShip(),this.computer.gameboard.placeRandomShip(),this.dom.renderBoard(this.player.gameboard.shipCoordinates,!0),console.table(this.computer.gameboard.board)}playerAttack(t){const{dataset:{row:e,col:n,status:r}}=t;"null"===r&&this.turn===this.player&&(this.computer.gameboard.receiveAttack([e,n])?(t.style.backgroundColor="red",this.#o([e,n],!0)):(t.style.backgroundColor="white",this.turn=this.computer,this.computerAttack()),t.dataset.status="hit")}computerAttack(){this.dom.computerElement.querySelector(".board").classList.add("inactive"),this.dom.playerElement.querySelector(".board").classList.remove("inactive"),setTimeout((()=>{if(this.turn!==this.computer)return;const t=()=>[Math.floor(Math.random()*B.size),Math.floor(Math.random()*B.size)];let[e,n]=t(),r=g.getCellElement([e,n],!0);for(;"null"!==r.dataset.status;)[e,n]=t(),r=g.getCellElement([e,n],!0);this.player.gameboard.receiveAttack([e,n])?(r.style.backgroundColor="red",r.dataset.status="hit",this.#o([e,n],!1),this.computerAttack()):(r.style.backgroundColor="white",r.dataset.status="miss",this.dom.computerElement.querySelector(".board").classList.remove("inactive"),this.dom.playerElement.querySelector(".board").classList.add("inactive"),this.turn=this.player)}),1e3)}#o([t,e],n){if(n){if(this.computer.gameboard.board[t][e].isSunk())for(const[t,e]of this.computer.gameboard.shipCoordinates)this.computer.gameboard.board[t][e].isSunk()&&(document.querySelector(`.cell[data-row="${t}"][data-col="${e}"][data-player="false"]`).style.backgroundColor="green")}else if(this.player.gameboard.board[t][e].isSunk())for(const[t,e]of this.player.gameboard.shipCoordinates)this.player.gameboard.board[t][e].isSunk()&&(document.querySelector(`.cell[data-row="${t}"][data-col="${e}"][data-player="true"]`).style.backgroundColor="green");this.computer.gameboard.isAllSunk()&&(alert("you win"),this.#n())}#e(){this.player.gameboard.resetBoard(),this.player.gameboard.placeRandomShip(),this.dom.renderBoard(this.player.gameboard.shipCoordinates,!0)}#n(){this.player.gameboard.resetBoard(),this.player.gameboard.placeRandomShip(),this.computer.gameboard.resetBoard(),this.computer.gameboard.placeRandomShip(),this.dom.clearBoardElement(!0),this.dom.clearBoardElement(!1),this.dom.renderBoard(this.player.gameboard.shipCoordinates,!0),this.dom.enableBtn("start-btn"),this.dom.enableBtn("randomize-btn"),this.dom.disableBtn("reset-btn"),this.turn="over"}#r(){this.dom.disableBtn("start-btn"),this.dom.disableBtn("randomize-btn"),this.dom.enableBtn("reset-btn"),this.dom.computerElement.querySelector(".board").classList.remove("inactive"),this.turn=this.player}}}},t=>{t(t.s=408)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,